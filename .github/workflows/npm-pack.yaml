name: Create Release and Publish npm package

on:
  push:
    branches:
      - master
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Install dependencies
      run: npm install

    - name: Run npm run build
      run: npm run build

    - name: Get the version tag for the release
      id: get_version
      run: echo "::set-output name=VERSION::${GITHUB_REF#refs/tags/}"

    - name: Run npm pack
      run: 
        npm pack
        echo "Pack complete. Listing contents:"
        ls 
        
    - name: Find the package file
      id: find_package_file
      run: echo "::set-output name=PACKAGE_FILE::$(ls ts-frida-*.tgz)"
    
    - name: Rename the npm package
      run: 
        echo "mv ${{ steps.find_package_file.outputs.PACKAGE_FILE }} ts-frida-${{ steps.get_version.outputs.VERSION }}.tgz"
        mv ${{ steps.find_package_file.outputs.PACKAGE_FILE }} ts-frida-${{ steps.get_version.outputs.VERSION }}.tgz
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload_release_asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./ts-frida-${{ steps.get_version.outputs.VERSION }}.tgz
        asset_name: ts-frida-${{ steps.get_version.outputs.VERSION }}.tgz
        asset_content_type: application/gzip

